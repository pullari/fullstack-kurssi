{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Notification","message","App","props","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","App_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","console","log","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e8c8c3fc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\nconst App = (props) => {  \r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('uusi muistiinpano...')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService      \r\n      .getAll()      \r\n      .then(initialNotes => {        \r\n        setNotes(initialNotes)    \r\n      })\r\n  },[])\r\n\r\n  const notesToShow = showAll    \r\n    ? notes    \r\n    : notes.filter(note => note.important === true)\r\n\r\n  const toggleImportanceOf = id => {    \r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService      \r\n      .update(id, changedNote)      \r\n      .then(returnedNote => {        \r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))   \r\n      })\r\n      .catch(error => {      \r\n        setErrorMessage(\r\n          `muistiinpano '${note.content}' poistettu palvelimelta`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))    \r\n      })\r\n  }\r\n\r\n  const rows = () => notesToShow.map(note =>\r\n    <Note\r\n      key={note.id}\r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n    />\r\n  )\r\n\r\n  const handleNoteChange = (event) => {   \r\n    console.log(event.target.value)    \r\n    setNewNote(event.target.value)  \r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    noteService      \r\n      .create(noteObject)      \r\n      .then(returnedNote => {        \r\n        setNotes(notes.concat(returnedNote))   \r\n        setNewNote('')      \r\n      })\r\n    setNewNote('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Muistiinpanot</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>        \r\n        <button onClick={() => setShowAll(!showAll)}>          \r\n          n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki' }        \r\n        </button>      \r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote} \r\n          onChange={handleNoteChange} />\r\n        <button type=\"submit\">tallenna</button>\r\n      </form> \r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}